# Uncomment this line to define a global platform for your project
platform :ios, '14.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def parse_KV_file(file, separator='=')
  file_abs_path = File.expand_path(file)
  if !File.exists? file_abs_path
    return [];
  end
  flutter_configuration = File.read(file_abs_path)
  return flutter_configuration.split("\n").map{|line|
    line.split(separator, 2).map{|component|
      component.strip()
    }
  }.reject{|components|
    components.count != 2
  }.map{|components|
    [components[0], components[1]]
  }.to_h
end

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_root = File.dirname(File.realpath(__FILE__)) + '/..'

  unless File.exist?(File.join(flutter_root, 'packages', 'flutter_tools', 'bin', 'flutter'))
    raise "#{flutter_root} is not a valid Flutter root."
  end

  flutter_application_path = File.join(flutter_root, '.')

  pod 'Flutter', :path => File.join(flutter_application_path, '.symlinks', 'flutter', 'ios')

  flutter_install_all_ios_pods(flutter_application_path)

  target 'RunnerTests' do
    inherit! :search_paths
    # Pods for testing
  end

end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
  end
end
